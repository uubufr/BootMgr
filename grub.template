set check_signatures=%%SIGN%%
trust --skip-sig $prefix/BootMgr.gpg
insmod all_video
insmod part_msdos
insmod part_gpt
insmod gzio
insmod ext2
insmod png
insmod gfxterm

loadfont $prefix/fonts/ascii.pf2
loadfont $prefix/fonts/DejaVuSans10.pf2
loadfont $prefix/fonts/DejaVuSans12.pf2
loadfont $prefix/fonts/DejaVuSans-Bold14.pf2
loadfont $prefix/fonts/euro.pf2
loadfont $prefix/fonts/unicode.pf2
font=unicode

search --no-floppy --fs-uuid --set=root %%UUIDROOT%%
export root

set locale_dir=$prefix/locale
set lang=%%LANG%%
insmod gettext
set gfxmode=auto
terminal_output gfxterm
set theme=$prefix/themes/theme.txt
export theme
set timeout_style=%%STYLE%%
set timeout=%%TIMEOUT%%

%%ROOTUSR%%
%%USER%%
set superusers="root"
export superusers


HDROOT=%%HDROOT%%
OPTIONS="%%KERNELOPTS%%"
OPTRESCUE="%%KERNELRESCUE%%"

# find last kernel
for FKERNEL in ls ($root)/vmlinuz-*.x86_64; do
  unset KCURRENTVERSION
  unset KCURRENTMAJOR
  unset KCURRENTMINOR
  unset KCURRENTPATCH

  regexp --set FKERN ".*/vmlinuz-([0-9]{1,}.[0-9]{1,}.[0-9]{1,}-[0-9]{1,}.*.x86_64)" $FKERNEL
  if test -z $KLAST; then
    KLAST=$FKERN
    regexp --set KLASTVERSION ".*/vmlinuz-([0-9]{1,2}).*.x86_64" $FKERNEL
    regexp --set KLASTMAJOR ".*/vmlinuz-[0-9]{1,2}.([0-9]{1,2}).*.x86_64" $FKERNEL
    regexp --set KLASTMINOR ".*/vmlinuz-[0-9]{1,2}.[0-9]{1,2}.([0-9]{1,2}).*.x86_64" $FKERNEL
    regexp --set KLASTPATCH ".*/vmlinuz-[0-9]{1,2}.[0-9]{1,2}.[0-9]{1,2}.([0-9]{3,}).*.x86_64" $FKERNEL
  else
    regexp --set KCURRENTVERSION ".*/vmlinuz-([0-9]{1,2}).*.x86_64" $FKERNEL
    if test $KCURRENTVERSION -gt $KLASTVERSION; then
      KLAST=$FKERN
      continue
    fi
    regexp --set KCURRENTMAJOR ".*/vmlinuz-[0-9]{1,2}.([0-9]{1,2}).*.x86_64" $FKERNEL
    if test $KCURRENTMAJOR -gt $KLASTMAJOR; then
      KLAST=$FKERN
      continue
    fi
    regexp --set KCURRENTMINOR ".*/vmlinuz-[0-9]{1,2}.[0-9]{1,2}.([0-9]{1,2}).*.x86_64" $FKERNEL
    if test $KCURRENTMINOR -gt $KLASTMINOR; then
      KLAST=$FKERN
      continue
    fi
    regexp --set KCURRENTPATCH ".*/vmlinuz-[0-9]{1,2}.[0-9]{1,2}.[0-9]{1,2}.([0-9]{3,}).*.x86_64" $FKERNEL
    if test $KCURRENTPATCH -gt $KLASTPATCH; then
      KLAST=$FKERN
      continue
    fi
  fi
done

# find previous kernel
for FKERNEL in ls ($root)/vmlinuz-*.x86_64; do
  unset KCURRENTVERSION
  unset KCURRENTMAJOR
  unset KCURRENTMINOR
  unset KCURRENTPATCH

  regexp --set FKERN ".*/vmlinuz-([0-9]{1,}.[0-9]{1,}.[0-9]{1,}-[0-9]{1,}.*.x86_64)" $FKERNEL
  if test $FKERN == $KLAST; then continue; fi
  if test -z $KPREV; then
    KPREV=$FKERN
    regexp --set KLASTVERSION ".*/vmlinuz-([0-9]{1,2}).*.x86_64" $FKERNEL
    regexp --set KLASTMAJOR ".*/vmlinuz-[0-9]{1,2}.([0-9]{1,2}).*.x86_64" $FKERNEL
    regexp --set KLASTMINOR ".*/vmlinuz-[0-9]{1,2}.[0-9]{1,2}.([0-9]{1,2}).*.x86_64" $FKERNEL
    regexp --set KLASTPATCH ".*/vmlinuz-[0-9]{1,2}.[0-9]{1,2}.[0-9]{1,2}.([0-9]{3,}).*.x86_64" $FKERNEL
  else
    regexp --set KCURRENTVERSION ".*/vmlinuz-([0-9]{1,2}).*.x86_64" $FKERNEL
    if test $KCURRENTVERSION -gt $KLASTVERSION; then
      KPREV=$FKERN
      continue
    fi
    regexp --set KCURRENTMAJOR ".*/vmlinuz-[0-9]{1,2}.([0-9]{1,2}).*.x86_64" $FKERNEL
    if test $KCURRENTMAJOR -gt $KLASTMAJOR; then
      KPREV=$FKERN
      continue
    fi
    regexp --set KCURRENTMINOR ".*/vmlinuz-[0-9]{1,2}.[0-9]{1,2}.([0-9]{1,2}).*.x86_64" $FKERNEL
    if test $KCURRENTMINOR -gt $KLASTMINOR; then
      KPREV=$FKERN
      continue
    fi
    regexp --set KCURRENTPATCH ".*/vmlinuz-[0-9]{1,2}.[0-9]{1,2}.[0-9]{1,2}.([0-9]{3,}).*.x86_64" $FKERNEL
    if test $KCURRENTPATCH -gt $KLASTPATCH; then
      KPREV=$FKERN
      continue
    fi
  fi
done


export HDROOT
export OPTIONS
export OPTRESCUE
export KLAST
export KPREV
export KRESCUE

IDNUMBER=1
export IDNUMBER


if [ "$KLAST" ]; then
 menuentry "Fedora $KLAST" --class default --class %%OS%% --class gnu-linux --unrestricted --id=$IDNUMBER {
  linuxefi /vmlinuz-$KLAST root=$HDROOT $OPTIONS
  initrdefi /initramfs-$KLAST.img
 }
 increment IDNUMBER
fi

if [ "$KPREV" ]; then
 menuentry "Fedora $KPREV (previous kernel)" --class latest --class %%OS%% --class gnu-linux --users superusers --id=$IDNUMBER {
  linuxefi /vmlinuz-$KPREV root=$HDROOT $OPTIONS
  initrdefi /initramfs-$KPREV.img
 }
 increment IDNUMBER
fi

submenu "Admin Access (restricted)" --class recovery --users superusers --id=$IDNUMBER {

 increment IDNUMBER

 if [ "$KLAST" ]; then
  menuentry "Fedora $KLAST (recovery mode)" --class default --class %%OS%% --class gnu-linux --unrestricted --id=$IDNUMBER {
   linuxefi /vmlinuz-$KLAST root=$HDROOT $OPTRESCUE
   initrdefi /initramfs-$KLAST.img
  }
  increment IDNUMBER
 fi

 if [ "$KPREV" ]; then
  menuentry "Fedora $KPREV (testing, recovery mode)" --class latest --class %%OS%% --class gnu-linux --unrestricted --id=$IDNUMBER {
   linuxefi /vmlinuz-$KPREV root=$HDROOT $OPTRESCUE
   initrdefi /initramfs-$KPREV.img
  }
  increment IDNUMBER
 fi

 for FRESCUE in ls ($root)/vmlinuz-0-rescue-*; do
  regexp --set KRESCUE ".*/vmlinuz-0-rescue-([0-9a-f]{32})" $FRESCUE
  if test "$FRESCUE" == "($root)/vmlinuz-0-rescue-$KRESCUE.sig"; then continue; fi
  if test -e ($root)/vmlinuz-0-rescue-$KRESCUE; then
   menuentry "Fedora $KRESCUE (legacy, recovery mode)" --class old --class fedora --class gnu-linux --users unrestricted --id=$IDNUMBER {
    linuxefi /vmlinuz-0-rescue-$KRESCUE root=$HDROOT $OPTRESCUE
    initrdefi /initramfs-0-rescue-$KRESCUE.img
   }
   increment IDNUMBER
  fi
  unset KRESCUE
 done

 menuentry "System Setup" --class UEFI --unrestricted --id=$IDNUMBER {
  fwsetup
 }
 increment IDNUMBER

 menuentry "Restart" --class reboot --unrestricted --id=$IDNUMBER {
  reboot
 }
 increment IDNUMBER

 menuentry "Halt" --class poweroff --unrestricted --id=$IDNUMBER {
  halt
 }
 increment IDNUMBER

}

##menuentry "Windows" --class windows --class useless --users %%WITHUSER%% --id=$IDNUMBER {
##  insmod part_gpt
##  insmod fat
##  insmod ntfs
##  parttool ${root} hidden-
##  search --no-floppy --fs-uuid --set=root %%WINROOTID%%
##  chainloader /EFI/Microsoft/Boot/bootmgfw.efi
##}
## increment IDNUMBER

menuentry "Restart" --class reboot --unrestricted --id=$IDNUMBER {
 reboot
}
increment IDNUMBER

menuentry "Halt" --class poweroff --unrestricted --id=$IDNUMBER {
 halt
}
increment IDNUMBER

if test $check_signatures == yes; then
  menuentry "Disable Signature Checking" --users superusers --id=$IDNUMBER {
    check_signatures=no
  }
fi

